syntax = "proto2";

/*
	Top-Level message
*/

message ClientMessage {
	optional GetAvailableGames getAvailableGames = 1;
	optional CreateGameRoom createGameRoom = 2;
	optional JoinRoom joinRoom = 3;
	optional LaunchGameRoom launchGameRoom = 4;
	optional GetGameRooms getGameRooms = 5;
	optional GetPlayerNames getPlayerNames = 6;
	optional PerformUpdate performUpdate = 7; // Add one for passively requesting latest update?
	optional PauseGame pauseGame = 8;
	optional ResumeGame resumeGame = 9;
	optional GetInventory getInventory = 10;
	optional GetTemplateProperties getTemplateProperties = 11;
	optional PlaceElement placeElement = 12;
	optional UpgradeElement upgradeElement = 13; // Has no corresponding response? Client doesn't check if upgrade succeeded
	optional CheckReadyForNextLevel checkReadyForNextLevel = 14;
	optional LoadLevel loadLevel = 15;
}

/*
	Pre-Game messages
*/

message GetAvailableGames {
}

message CreateGameRoom {
	required string roomName = 1;
}

message JoinRoom {
	required string roomName = 1;
	required string userName = 2;
}

message LaunchGameRoom {
	required string roomName = 1;
}

message GetGameRooms {
}

message GetPlayerNames {
	required string roomName = 1;
}

/*
	In-Game messages
	(Should these requests be stateful instead, to make the server relatively stateless? Need to balance against security / client privileges)
*/

message PerformUpdate {
}

message PauseGame {
}

message ResumeGame {
}

message GetInventory {
}

message GetTemplateProperties {
	required string elementName = 1;
}

message PlaceElement {
	required string elementName = 1;
	required double xCoord = 2;
	required double yCoord = 3;
}

message UpgradeElement {
	required int32 spriteId = 1;
}

message CheckReadyForNextLevel {
}

// Keep gameName parameter to support extensibility to collaborative editing (authoring) where arbitrary levels can be loaded, not just next level
message LoadLevel {
	required string gameName = 1;
	required int32 level = 2;
}

